@page "/buysell"

<div class="buysell-main">
    <div class="top">
        <p>
            @(Direction == "BUY" ? "Buy XMR" : "Sell XMR")
            <div class="xmr-icon"></div>
            @(Direction == "BUY" ? "with" : "for")
        </p>
        @if (string.IsNullOrEmpty(PreferredCurrency) || string.IsNullOrEmpty(CurrentMarketPrice))
        {
            <p class="price">Loading price...</p>
        }
        else
        {
            <p class="price">XMR/@PreferredCurrency: @CurrentMarketPrice</p>
        }
    </div>
    <div class="account-type">
        <Tabs @bind-SelectedTabIndex="OfferPaymentType" TabNames="@(["Fiat", "Crypto", "Other"])"></Tabs>
        <div class="toggle-container">
            <p class="buy-txt">Buy</p>
            <Toggle @bind-IsToggled="IsToggled"/>
            <p class="sell-txt">Sell</p>
        </div>
        <div class="collapse">
            <ion-icon @onclick="() => IsCollapsed = !IsCollapsed" name=@(IsCollapsed ? "chevron-down-outline" : "chevron-up-outline")></ion-icon>
        </div>
    </div>

    @if (IsCreatingOffer)
    {
        <CreateOffer OnCloseCreateOffer="@CloseCreateOffer" Direction="@Direction" />
    }
    else
    {
        <div class="inputs">
            @if (!IsCollapsed)
            {
                <div class="dropdown">
                    <SearchableDropdown @ref="CurrencySearchableDropdown" Placeholder="Show all" Items="@VisibleCurrencyCodes" Text="Currency" OnSubmit="@((val) => SelectedCurrencyCode = val)" />
                </div>
                <div class="dropdown">
                    <SearchableDropdown @ref="PaymentMethodSearchableDropdown" Placeholder="Show all" Items="@VisiblePaymentMethods" Text="Payment method" OnSubmit="@((val) => SelectedPaymentMethod = val)" />
                </div>                
            }
            <div class="offers-list-text-container">
                <p class="offers-list-text">@(Direction == "BUY" ? "Buy XMR from" : "Sell XMR to")</p>
                <p class="offers-list-text">@FilteredOffers.Count Offers</p>
            </div>
        </div>
        @if (IsFetching)
        {
            <div class="offers-spinner-container">
                <Spinner IsVisible="true"></Spinner>
            </div>
        }
        else
        {
            <ul class="offers">
                @foreach (var offer in FilteredOffers)
                {
                    <li class="offer">
                        @* check that payment method also supports currency *@
                        <a class="offer-link" href=@($"buysell/offer?OfferId={offer.Id}&title=Offer")>
                            <div class="offer-top">
                                <div class="offer-currency">
                                    @(Direction == "SELL" ? offer.BaseCurrencyCode : offer.CounterCurrencyCode)
                                    <img src="icons/arrow-right.svg" />
                                    @(Direction == "SELL" ? offer.CounterCurrencyCode : offer.BaseCurrencyCode)
                                    |
                                    @(Math.Round(double.Parse(offer.Price), 2))
                                    @offer.CounterCurrencyCode
                                    (@Math.Round(offer.MarketPriceMarginPct, 2).ToString("0.00")%)
                                </div>
                                @if (!offer.IsMyOffer)
                                {
                                    <div class="card">
                                        <p>@offer.PaymentMethodShortName</p>
                                    </div>
                                }
                            </div>
                            <div class="amounts">
                                @{
                                    var minVolume = double.Parse(offer.MinVolume);
                                    var volume = double.Parse(offer.Volume);

                                    if (minVolume == volume)
                                    {
                                        <p>Min/max: @(Math.Round(volume, 2) + " ") @offer.CounterCurrencyCode</p>
                                    }
                                    else
                                    {
                                        <p>Min/max: @($"{Math.Round(minVolume, 2)} - {Math.Round(volume, 2)} ") @offer.CounterCurrencyCode</p>
                                    }
                                }
                            </div>
                            <p>Min/max: @(offer.Amount == offer.MinAmount ? $"{offer.Amount.ToMonero()} XMR" : $"{offer.MinAmount.ToMonero()} - {offer.Amount.ToMonero()} XMR")</p>
                        </a>
                    </li>
                }
            </ul>
        }
        <div class="buttons">
            <button class="create-offer-button button-green" @onclick="() => IsCreatingOffer = !IsCreatingOffer">@(Direction == "BUY" ? "Create offer to buy XMR" : "Create offer to sell XMR")</button>
            <button @onclick="NavigateToMyOffers">View my offers</button>
        </div>
    }
</div>