@page "/trades"

<div class="tabs">
    <Tabs TabNames="@(["Open trades", "History", "Disputes"])" @bind-SelectedTabIndex="@SelectedTabIndex"></Tabs>
</div>

@switch (SelectedTabIndex)
{
    case 0:
    case 1:
        if (FilteredTradeInfos.Count != 0)
        {
            <ul class="trades-list">
                @foreach (var tradeInfo in FilteredTradeInfos)
                {
                    <li class="trade-card">
                        <div class="trade-card-top">
                            <p class="short-id">@tradeInfo.ShortId</p>
                            @if (SelectedTabIndex == 1)
                            {
                                <p class="short-id">@(tradeInfo.IsCompleted ? "Completed" : "") </p>
                            }
                            <p class="date">@(tradeInfo.Date.ToDateTime().ToLocalTime().ToString("yyyy/MM/dd"))</p>
                        </div>
                        <div class="middle">
                            <p class="xmr-amount">XMR Amount: @tradeInfo.Amount.ToMonero() XMR</p>
                            @if (tradeInfo.Offer.BaseCurrencyCode == "XMR")
                            {
                                <p>@tradeInfo.Offer.CounterCurrencyCode: @tradeInfo.TradeVolume</p>
                            }
                            else
                            {
                                <p>@tradeInfo.Offer.BaseCurrencyCode: @tradeInfo.TradeVolume</p>
                            }
                        </div>
                        <div class="buttons">
                            @if (SelectedTabIndex == 0)
                            {
                                <button class="button-green" onclick="@(() => NavigationManager.NavigateTo($"trades/{tradeInfo.TradeId}/trade?tradeId={tradeInfo.TradeId}&title=Trade%20{@tradeInfo.ShortId}"))">Go to trade</button>
                            }
                            else
                            {
                                <button onclick="@(() => DisplayCompletedTradeModal(tradeInfo.TradeId))">View details</button>
                            }
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No trades</p>
        }
        break;
    case 2:
        if (Disputes.Count != 0)
        {
            <ul class="disputes-list">
                @foreach (var dispute in Disputes)
                {
                    var weAreBuyer = (dispute.DisputeOpenerIsBuyer && dispute.IsOpener) || (!dispute.DisputeOpenerIsBuyer && !dispute.IsOpener);

                    <li class="trade-card">
                        <div class="trade-card-top">
                            <p class="short-id short-id-dispute">@dispute.TradeId.Split("-")[0]</p>
                            <p class="short-id short-id-dispute">@dispute.State</p>
                            <p class="date">@dispute.OpeningDate.ToDateTime().ToLocalTime().ToString("yyyy/MM/dd")</p>
                        </div>
                        <div class="middle">
                            <p class="xmr-amount">XMR Amount: @(((ulong)dispute.Contract.TradeAmount).ToMonero()) XMR</p>
                            <p>@dispute.Contract.OfferPayload.CounterCurrencyCode: @(Math.Round((dispute.Contract.TradePrice / 100_000_000) * ((ulong)dispute.Contract.TradeAmount).ToMonero()))</p>
                        </div>
                        <button onclick="@(() => NavigationManager.NavigateTo($"trades/{dispute.TradeId}/chat?disputeTradeId={dispute.TradeId}&disputeId={dispute.Id}&title=Dispute%20for%20trade%20{dispute.TradeId.Split("-")[0]}&arbitrator={dispute.Contract.ArbitratorNodeAddress.HostName.Split(".")[0]}&tradePeer={(weAreBuyer ? dispute.Contract.SellerNodeAddress.HostName.Split(".")[0] : dispute.Contract.BuyerNodeAddress.HostName.Split(".")[0])}&myAddress={(weAreBuyer ? dispute.Contract.BuyerNodeAddress.HostName.Split(".")[0] : dispute.Contract.SellerNodeAddress.HostName.Split(".")[0])}"))">View Dispute</button>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No disputes</p>
        }
        break;
    default: break;
}

<Modal Title="@("Trade info " + CompletedTradeInfo?.ShortId)" IsOpen="CompletedTradeInfo is not null" ModalButtonOptions="ModalButtonOptions.NONE" IsOpenChanged="@((isOpen) => { if (!isOpen) CompletedTradeInfo = null; })">
    <div class="regular-p-grey">
        <p>Your role: @CompletedTradeInfo?.Role</p>
        <p>XMR amount: @CompletedTradeInfo?.Amount.ToMonero() XMR</p>
        @if (CompletedTradeInfo?.Offer.BaseCurrencyCode == "XMR")
        {
            <p>@CompletedTradeInfo?.Offer.CounterCurrencyCode amount to receive: @CompletedTradeInfo?.TradeVolume @CompletedTradeInfo?.Offer.CounterCurrencyCode</p>
        }
        else
        {
            <p>@CompletedTradeInfo?.Offer.BaseCurrencyCode amount to receive: @CompletedTradeInfo?.TradeVolume @CompletedTradeInfo?.Offer.BaseCurrencyCode</p>
        }
        <p>Trade price: @Math.Round(decimal.Parse(CompletedTradeInfo?.Price ?? "0"), 4)</p>
        <p>Payment method: @CompletedTradeInfo?.Offer.PaymentMethodShortName</p>
    </div>
</Modal>