@page "/"

<Spinner IsFullscreen="true" IsVisible="IsInitializing"/>

<Modal IsOpen="IsInstallTypeModalOpen"
       Title="Initial setup"
       ModalButtonOptions="ModalButtonOptions.NONE"
       IsCloseable="false">
    <div class="install-modal">
        <p>In order to use the app the Haveno daemon needs to be installed inside Termux.</p>
        <p>Please choose an installation type.</p>

        <div class="buttons">
            <button class="verify-modal-button button-green" @onclick="@(async (e) => { IsInstallTypeModalOpen = false; await HandleInstall(DaemonInstallOptions.TermuxAutomatic); })">Standalone</button>
            <button class="verify-modal-button button-green" @onclick="@(async (e) => { IsInstallTypeModalOpen = false; await HandleInstall(DaemonInstallOptions.RemoteNode); })">Remote node</button>
        </div>
    </div>
</Modal>
<Modal IsOpen="TermuxSetupState != TermuxSetupState.Initial" Title="Haveno setup" ModalButtonOptions="ModalButtonOptions.NONE" IsCloseable="false">
    @switch (TermuxSetupState)
    {
        case TermuxSetupState.InstallingTermux:
            <div class="installing">
                <span class="loader"></span>
                <p class="regular-p-grey">Downloading Termux...</p>
            </div>
            @* <p>@($"Downloaded {ProgressPercentage:F2}%")</p> *@
            break;
        case TermuxSetupState.SettingUpTermux:
            <p class="regular-p-grey">Setting up Haveno...</p>
            break;
        case TermuxSetupState.Finished:
            <p class="regular-p-grey">Finished setting up Haveno. Daemon is starting...</p>
            break;
         default: break;
    }
</Modal>
<Modal IsOpen="InstallationErrorMessage is not null" Title="Installation error" ModalButtonOptions="ModalButtonOptions.NONE" IsCloseable="false">
    <p>@InstallationErrorMessage</p>
    <p class="regular-p-grey">Try restarting the app</p>
</Modal>