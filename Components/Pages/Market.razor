@page "/Market"

<div class="market-main">
    <div class="year-price-container">
        <div class="dropdowns">
            <Dropdown Class="dropdown-container" @bind-Value="Interval" Items="@([Interval])" />
            <Dropdown Class="dropdown-container" @bind-Value="Year" Items="Years" />
        </div>
        @if (string.IsNullOrEmpty(PreferredCurrency) || string.IsNullOrEmpty(CurrentMarketPrice))
        {
            <p class="price">Loading price...</p>
        }
        else
        {
            <p class="price">XMR/@PreferredCurrency: @CurrentMarketPrice</p>
        }
    </div>

    <div class="chart-container">
        @if (TradeStatistics.Count == 0)
        {
@*             <div class="graph-spinner">
                <Spinner IsVisible="true"></Spinner>
            </div> *@
        }
        else
        {
            <MudChart ChartOptions="_options"
                      ChartType="ChartType.Bar"
                      ChartSeries="@_series"
                      @bind-SelectedIndex="_index"
                      XAxisLabels="@_xAxisLabels"
                      Width="100%"
                      Height="100%"
                      AxisChartOptions="_axisChartOptions">

            </MudChart>
        }
    </div>
    <p class="bold-p trades-p">Trades</p>
    <div class="table-wrapper">
        @if (TradeStatistics.Count == 0)
        {
            <div class="trades-spinner">
                <Spinner IsVisible="true"></Spinner>
            </div>
        }
        else
        {
            <table class="trades">
                <tr class="head">
                    <th>Date</th>
                    <th>Market</th>
                    <th>Price</th>
                    <th>XMR Amount</th>
                </tr>
            @foreach (var trade in FilteredTradeStatistics)
            {
                <tr>
                    <td>
                        @trade.Date.ToLocalTime().ToShortDateString()
                    </td>
                    <td>
                        @trade.Currency
                    </td>
                    <td>
                        @(((decimal)trade.Price / 100_000_000).ToString("0.0000"))
                    </td>
                    <td>
                        @(((ulong)trade.Amount).ToMonero().ToString("0.0000"))
                    </td>
                </tr>
            }
            </table>
        }
    </div>
    <div class="nav-buttons">
        <ion-icon @onclick="PreviousPage" size="large" name="chevron-back-circle-outline"></ion-icon>
        <p>@(CurrentPage + 1)/@(PageCount + 1)</p>
        <ion-icon @onclick="NextPage" size="large" name="chevron-forward-circle-outline"></ion-icon>
    </div>
</div>