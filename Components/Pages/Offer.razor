@page "/buysell/offer"

<div class="offer-main">
    <div class="dropdown">
        <SearchableDropdown Disabled="@(PaymentAccounts.Count < 2)" InitialValue="@SelectedPaymentAccountId" Text="Trading account" Placeholder="Trading account" Items="@PaymentAccounts" OnSubmit="(val) => SelectedPaymentAccountId = val"></SearchableDropdown>
    </div>
    <label>Amount to @(OfferInfo?.Direction == "BUY" ? "sell" : "buy")</label>
    <input disabled="@(UserDoesNotHaveAccount || OfferInfo?.MinAmount == OfferInfo?.Amount)" step="0.01" min="@OfferInfo?.MinAmount.ToMonero()" max="@OfferInfo?.Amount.ToMonero()" @bind="@MoneroAmount" type="number" />
    @if (OfferInfo?.MinAmount == OfferInfo?.Amount)
    {
        <p class="range">Min/Max: @OfferInfo?.MinAmount.ToMonero() XMR</p>
    }
    else
    {
        <p class="range">Min/Max: @OfferInfo?.MinAmount.ToMonero() XMR - @OfferInfo?.Amount.ToMonero() XMR</p>
    }
    <label>Total in @OfferInfo?.CounterCurrencyCode</label>
    <input readonly @bind="@FiatAmount" type="number" step="0.01" />

    <div class="funding-section">
        <InfoRow Label="Available funds" Value="@(AvailableBalance.ToMonero() + " XMR")"></InfoRow>
        <InfoRow Label="Required funds" Value="@(RequiredFunds.ToMonero() + " XMR")"></InfoRow>
    </div>

    <div class="slider-container">
        <Slider OnReachedEnd="OpenNextTakeOfferStep" Disabled="UserDoesNotHaveAccount || (RequiredFunds > AvailableBalance)" Text="Take offer"></Slider>
    </div>
    <button class="button-cancel" @onclick="Cancel">Cancel</button>
</div>

<Modal IsOpen="IsTakingOffer" Title="Taking offer" ModalButtonOptions="ModalButtonOptions.NONE" OnCancelPressed="() => CancelOfferCts.Cancel()">
    <p class="regular-p-grey">Please wait</p>
</Modal>
<Modal IsCloseable="false" Title="No payment account" IsOpen="UserDoesNotHaveAccount" ModalButtonOptions="ModalButtonOptions.OK_CANCEL" CancelButtonText="Go back" OkButtonText="Create account" OnOkPressed="@NavigateToAccount" OnCancelPressed="@(() => NavigationManager.NavigateTo("BuySell"))">
    <p class="regular-p-grey">@AccountErrorMessage</p>
</Modal>
<Modal 
    Title="Trade info" 
    IsOpen="ShowExtraInfoModal"
    ModalButtonOptions="ModalButtonOptions.OK_CANCEL" 
    CancelButtonText="Close" 
    OkButtonText="Confirm"
    IsCloseable="false"
    OnOkPressed="() => ShowExtraInfoModal = false" 
    OnCancelPressed="@(() => NavigationManager.NavigateTo("BuySell"))">
    <p class="regular-p-grey">Please review the maker's terms and conditions.</p>
    <p class="regular-p-grey">If you do not meet the requirements do not take this trade</p>
    <br />
    <div class="extra-info">
        <p class="regular-p-grey">@OfferInfo?.ExtraInfo</p>
        <img class="copy-icon" @onclick="@(async () => await Clipboard.Default.SetTextAsync(OfferInfo?.ExtraInfo))" src="icons/copy.svg" />
    </div>
</Modal>
<Modal Title="Enter offer passphrase" IsOpen="ShowPassphraseModal" ModalButtonOptions="ModalButtonOptions.OK_CANCEL" OkButtonText="Confirm" OnOkPressed="@TakeOfferAsync">
    <input class="passphrase-input" type="text" @bind="Passphrase" placeholder="" />
</Modal>