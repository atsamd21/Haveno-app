<p class="bold-p">Create offer</p>

<Modal Title="Creating offer" VisibleButtons="false" @bind-IsOpen="IsFetching">
    <Spinner IsVisible="true"></Spinner>
</Modal>

@if (PaymentAccounts.Count == 0)
{
    <p>You have no payment accounts</p>
}
else
{
    <div class="dropdown">
        <SearchableDropdown InitialValue="@SelectedPaymentAccountId" Items="@PaymentAccounts" Text="Choose trading account" Placeholder="No accounts" OnSubmit="(val) => SelectedPaymentAccountId = val"></SearchableDropdown>
    </div>

    <div class="dropdown">
        <SearchableDropdown InitialValue="@SelectedCurrencyCode" Placeholder="Show all" Items="@CurrencyCodes" Text="Currency" OnSubmit="@((val) => SelectedCurrencyCode = val)" />
    </div>

    @* <EditForm EditContext="_editContext" class="input-fields" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
</EditForm> *@
    <div>
        <label>Amount of XMR to @Direction.ToLower()</label>
        <input type="number" @bind="Amount" placeholder="Enter amount in XMR" />

        <label>Minimum amount of XMR</label>
        <input type="number" @bind="MinimumAmount" placeholder="Enter amount in XMR" />
    </div>

    @if (Direction == "BUY")
    {
        <label>Below % from market price</label>
        <input type="number" @bind="MarketPriceMarginPct" />

        <label>Deactive offer if above</label>
        <input type="number" @bind="TriggerAmount" />

        <label>Amount in @(SelectedCurrencyCode) to spend</label>
        <input type="number" @bind="FiatAmount" />
    }
    else
    {
        <label>Above % from market price</label>
        <input type="number" @bind="MarketPriceMarginPct" />

        <label>Deactive offer if below</label>
        <input type="number" @bind="TriggerAmount" />

        <label>Amount in @(SelectedCurrencyCode) to receive</label>
        <input type="number" @bind="FiatAmount" />
    }


    <div class="buttons">
        <button @onclick="PostOfferAsync">Create offer</button>
        <button @onclick="OnCloseCreateOffer">Cancel</button>
    </div>

}
