@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
@implements IDisposable

<div class="page">
    @if (IsIndex)
    {
        <main>
            @Body
        </main>
    }
    else
    {
        <ErrorHandler>
            <Header />
            <main class="@(_keyboardIsOpen ? "minimized" : "")">
                @Body
            </main>
            <NavMenu />
        </ErrorHandler>
    }
</div>

@code {
    private bool _keyboardIsOpen;
    public bool IsIndex { get; set; }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
        KeyboardService.KeyboardStateChanged += HandleKeyboardChanged;

#if ANDROID
        MainActivity.OnNotificationNavigate += HandleNotificationNavigate;
#endif

        IsIndex = NavigationManager.ToBaseRelativePath(NavigationManager.Uri) == string.Empty;
    }

    private void HandleNotificationNavigate(string urlToOpen)
    {
        NavigationManager.NavigateTo(urlToOpen);
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        IsIndex = string.IsNullOrEmpty(e.Location.Replace(NavigationManager.BaseUri, ""));
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
        KeyboardService.KeyboardStateChanged -= HandleKeyboardChanged;

        #if ANDROID
        MainActivity.OnNotificationNavigate -= HandleNotificationNavigate;
        #endif
    }

    private void HandleKeyboardChanged(bool isOpen)
    {
        _keyboardIsOpen = isOpen;
        StateHasChanged();
    }
}