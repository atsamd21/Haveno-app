@implements IDisposable

<div class="header-main">
    <h3>@_headerTitle</h3>
    <NavLink class="dots-wrapper" href="settings" Match="NavLinkMatch.Prefix">
        <i class="bi bi-three-dots"></i>
    </NavLink>
</div>

@code {
    private string _headerTitle = "Market";

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;
    [Inject]
    public IJSRuntime JS { get; set; } = default!;

    public bool IsMenuOpen { get; set; }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleHeaderChanged(string title)
    {
        _headerTitle = title;
    }

    private async Task GoBack()
    {
        await JS.InvokeVoidAsync("history.back");
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        IsMenuOpen = false;

        var queryParams = System.Web.HttpUtility.ParseQueryString(new Uri(NavigationManager.Uri).Query);
        var title = queryParams["title"];
        if (!string.IsNullOrEmpty(title))
        {
            _headerTitle = title;
        }
        else
        {
            _headerTitle = e.Location.Replace(NavigationManager.BaseUri, "");

            if (_headerTitle == "buysell")
            {
                _headerTitle = "Buy & Sell";
            }
        }

        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }
}
